from math import sin, cos

def simple_iteration(f, x0, epsilon = 1e-4):
    """
    Реалізує метод простої ітерації для знаходження коренів рівняння f(x) = 0.
    
    Аргументи:
    f -- функція, корені якої потрібно знайти
    x0 -- початкове наближення
    epsilon -- задана точність
    
    Повертає:
    x -- значення кореня з точністю epsilon
    num_iterations -- кількість ітерацій
    """
    
    # визначаємо функцію для методу простої ітерації
    g = lambda x: x - f(x)/12 - 0.25/x - sin(x)/12
    
    # ініціалізуємо змінні
    x = x0
    num_iterations = 0
    
    # починаємо ітерації
    for i in range(100):
        # зберігаємо попереднє значення x
        x_prev = x
        
        # обчислюємо нове значення x
        x = g(x_prev)
        
        # обчислюємо різницю між поточним і попереднім значеннями x
        dx = abs(x - x_prev)
        
        # перевіряємо, чи досягнута задана точність
        if dx < epsilon:
            break
        
        # збільшуємо лічильник ітерацій
        num_iterations += 1
        
    return x, num_iterations

root, n = simple_iteration(lambda x: x**2 + sin(x) - 12*x - 0.25, 15)

print("Найменший додатній корінь:", root)
print("Кількість кроків:", n)